{
  "Document": {
    "DocumentId": 2076071404,
    "Title": "ASP and XML/XSL: Flippant Remarks About XML-Based Designs",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2005-09-16T14:37:00.187",
    "ModificationDate": "2005-09-16T14:37:00.187",
    "TemplateId": null,
    "SegmentId": 84,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "The main idea behind incorporating XML into ASP solutions (besides vacuous fashion trends labeled \"cool\") is to reduce dependency on Microsoft-specific components (while simultaneously being vendor-compliant). In keeping with this realistic goal, the first Microsoft-specific target is the ADO Recordset. The second major target is the use of ASP scripting languages to render HTML.\n\nFirst target: the ADO Recordset. Replace the ADO Recordset with the ADO Stream in ADO 2.5 and above:\n\n\"HOWTO: Obtain an ADO Recordset from XML\"\nhttp://support.microsoft.com/support/kb/articles/Q263/2/47.ASP\n\n\"Server-Side XML in ASP‚Äù\nhttp://www.15seconds.com/Issue/990527.htm\n\n\nSecond target: use XML/XSL to render HTML. This is based on the Microsoft.XMLDOM object.\n\n\"Separating Content from Presentation with Server-Side XML\"\nhttp://msdn.microsoft.com/library/periodic/period99/xml.htm\n\n\"'DXML': Taking a TOC from XML to DHTML\"\nhttp://msdn.microsoft.com/workshop/Author/dhtml/corner042699.asp\n",
  "Tag": "kb2076071404"
}