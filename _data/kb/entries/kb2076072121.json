{
  "Document": {
    "DocumentId": 2076072121,
    "Title": "Zend Framework: “Migrating from 1.0.x to 1.5.0 or Newer”; framework.zend.com",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2009-04-21T20:42:26",
    "ModificationDate": "2009-04-21T20:42:26",
    "TemplateId": null,
    "SegmentId": 67,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": " Though most basic functionality remains the same, and all documented functionality remains the same, there is one particular undocumented \"feature\" that has changed.\n\nWhen writing URLs, the documented way to write camelCased action names is to use a word separator; these are '.' or '-' by default, but may be configured in the dispatcher. The dispatcher internally lowercases the action name, and uses these word separators to re-assemble the action method using camelCasing. However, because PHP functions are not case sensitive, you could still write URLs using camelCasing, and the dispatcher would resolve these to the same location. For example, 'camel-cased' would become 'camelCasedAction' by the dispatcher, whereas 'camelCased' would become 'camelcasedAction'; however, due to the case insensitivity of PHP, both will execute the same method.\n\nThis causes issues with the ViewRenderer when resolving view scripts. The canonical, documented way is that all word separators are converted to dashes, and the words lowercased. This creates a semantic tie between the actions and view scripts, and the normalization ensures that the scripts can be found. However, if the action 'camelCased' is called and actually resolves, the word separator is no longer present, and the ViewRenderer attempts to resolve to a different location -- 'camelcased.phtml' instead of 'camel-cased.phtml'.\n\nSome developers relied on this \"feature\", which was never intended. Several changes in the 1.5.0 tree, however, made it so that the ViewRenderer no longer resolves these paths; the semantic tie is now enforced. First among these, the dispatcher now enforces case sensitivity in action names. What this means is that referring to your actions on the url using camelCasing will no longer resolve to the same method as using word separators (i.e., 'camel-casing'). This leads to the ViewRenderer now only honoring the word-separated actions when resolving view scripts. \n\n[http://framework.zend.com/manual/en/zend.controller.migration.html]",
  "Tag": "kb2076072121"
}