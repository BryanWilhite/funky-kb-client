{
  "Document": {
    "DocumentId": 2076072328,
    "Title": "C# Code: An Example of Subtracting DateTime; Making the Future a Negative Number",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2010-02-23T16:27:34",
    "ModificationDate": "2010-02-23T16:27:34",
    "TemplateId": null,
    "SegmentId": 83,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "var countDown = new TimeSpan(DateTime.Now.Subtract(epsDate.Value).Ticks);\n\ndata.DaysInterval = countDown.Days;\ndata.IsDayOf = (countDown.Days == 0);\ndata.IsPastDue = (countDown.Ticks > 0);\ndata.IsWithinTwoWeeks = (countDown.Days <= -14);\n\nvar acronym = GetSymbolDuePrefix(symbolType);\nvar due = (data.IsPastDue && (data.DaysInterval > 1)) ? \"Past Due \".ToUpper() : \"Due \".ToUpper();\nvar interval = \"Today\";\nif (data.DaysInterval == 1) interval = \"1 Day\";\nif ((Math.Abs(data.DaysInterval) > 1) && data.IsPastDue) interval = string.Format(\"{0} Days\", Math.Abs(data.DaysInterval));\nif ((Math.Abs(data.DaysInterval) > 1) && !data.IsPastDue) interval = string.Format(\"in {0} Days\", Math.Abs(data.DaysInterval));\n\ndata.DisplayText = string.Concat(acronym, due, interval, \" (e)\"); ",
  "Tag": "kb2076072328"
}