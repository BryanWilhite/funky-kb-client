{
  "Document": {
    "DocumentId": 2076072097,
    "Title": "Adobe ActionScript 3: Notes for “Working with display objects”; DisplayObject, Sprite, MovieClip, UIComponent and Stage",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2009-02-05T17:00:45",
    "ModificationDate": "2009-02-05T17:00:45",
    "TemplateId": null,
    "SegmentId": 67,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "* “All display objects are subclasses of the DisplayObject class… There is no constructor function for the DisplayObject class. You must create another type of object (an object that is a subclass of the DisplayObject type), such as a Sprite, to instantiate an object with the new constructor. Also, if you want to create a custom display object class, you must create a subclass of one of the display object subclasses that has a usable constructor function (such as the Shape class or the Sprite class).”\n\nThese “display objects” include Sprite, MovieClip, UIComponent and the Flex Application object.\n\n* “When you instantiate a display object, it will not appear onscreen (on the Stage) until you add the display object instance to a display object container that is on the display list. …When you add any visual element to the Stage, that element becomes a child of the Stage object.”\n\nIt is important to remember that the Stage objects inherits from the DisplayObject. This implies that a “child” of the Stage is defined by the DisplayObject. This also implies that any reference to a “display list” most likely refers to the children of the DisplayObject.\n\nThe DisplayObject.stage property is read-only. The Flex Application object also also has a stage property (of course).\n\nFor more information refer to the “Display Programming” section in “Programming ActionScript 3.0” (Flex 2.01):\n\n    http://livedocs.adobe.com/flex/201\n        /html/05_Display_Programming_162_01.html\n",
  "Tag": "kb2076072097"
}