{
  "Document": {
    "DocumentId": 910205312,
    "Title": "SQL: When to Use Dynamic SQL and When to Use Stored Procedures; Views and SELECT Stored Procedures",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2007-11-19T15:15:47",
    "ModificationDate": "2007-11-19T15:15:47",
    "TemplateId": null,
    "SegmentId": 72,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "* Dynamic SQL and Stored Procedures\n\nFundamentally, use Dynamic SQL (that is, SQL built \"on the fly\" in code) when it is impossible to use Stored Procedures. Many SQL servers cannot use late binding on database objects. In such servers, stored procedures cannot represent table names or column names as variables. When the tables and columns change on the fly, Dynamic SQL is the way to display or affect data.\n\nBeyond this fundamental, the use of stored proc's or Dyamic SQL is matter of code management style. Do you want to deal with hundreds of mysterious stored proc's on the server? Do you want to \"hard code\" or store SQL strings in \"meta-data\" tables or client-side application files?\n\n\n* Views and SELECT Stored Procedures\n\nIn short, a View is just another table compared to a Stored Procedure. To show a View, a SQL SELECT statement must be used which is compiled on demand. This is very much unlike a Stored Procedure, which is pre-compiled and \"planned\" (if, say, WITH RECOMPILE is used for Sybase SQL Servers).\n\nSELECT Stored Procedures are smaller and faster than Views. They are also more complex than Views. They can run loops, decision structures and other logic a View was not designed to handle.\n\nThe following is an example of a SELECT Stored Procedure for a Sybase SQL Server:\n\n    IF OBJECT_ID('rpt_get_field_names') IS NOT NULL\n        BEGIN\n        DROP PROCEDURE rpt_get_field_names\n    IF OBJECT_ID('rpt_get_field_names') IS NOT NULL\n        PRINT '<<< FAILED DROPPING PROCEDURE rpt_get_field_names >>>'\n    ELSE\n        PRINT '<<< DROPPED PROCEDURE rpt_get_field_names >>>'\n    END\n    GO\n\n    CREATE PROCEDURE rpt_get_field_names\n\n    WITH RECOMPILE\n\n    AS\n\n    SELECT\n      t_field.field_id\n    , t_field.name\n    , t_field_lookup.value\n\n    FROM \n      t_field\n    , t_field_lookup\n\n    WHERE t_field.field_id = t_field_lookup.field_id\n\n    ORDER BY\n      t_field.name\n    , t_field_lookup.value\n    GO\n\n    GRANT EXECUTE ON rpt_get_field_names TO public\n    GO\n    IF OBJECT_ID('rpt_get_field_names') IS NOT NULL\n    PRINT '<<< CREATED PROCEDURE rpt_get_field_names >>>'\n    ELSE\n    PRINT '<<< FAILED CREATING PROCEDURE rpt_get_field_names >>>'\n    GO",
  "Tag": "kb910205312"
}