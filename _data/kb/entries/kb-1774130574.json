{
  "Document": {
    "DocumentId": -1774130574,
    "Title": "VBScript and ASP Code: In-Line Error Handling with Resume Next",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "1999-03-12T17:40:16",
    "ModificationDate": "1999-03-12T17:40:16",
    "TemplateId": null,
    "SegmentId": 67,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "'VBScript only has \"in-line\" error handling.\n'The Resume Next keywords do work\n'in the latest versions of VBScript.\n'Recall that there are no line labels in VBScript.\n'I have, however, seen some code using line numbers\n'---especially line zero (e.g. On Error Goto 0).\n'According  to Microsoft, the Err object has existed\n'since version 1.0 of VBScript.\n'This is the general form of the VBScript error handler\n'using Resume Next:\n\n    On Error Resume Next\n    'Line(s) of code to trap go here.\n    If Err.number <> 0 Then\n        Response.Write Err.Number & \": \" & Err.Description\n        Response.End\n        Err.Clear\n    End If\n\n'Alternatively, there is the Select-Case form:\n\n    On Error Resume Next\n    'Line(s) of code to trap go here.\n    Select Case Err.number\n        Case 0\n            'No error. Continue.\n        Case Else\n            Response.Write Err.Number & \": \" & Err.Description\n            Response.End\n            Err.Clear\n    End Select",
  "Tag": "kb-1774130574"
}