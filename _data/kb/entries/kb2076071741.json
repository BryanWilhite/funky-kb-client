{
  "Document": {
    "DocumentId": 2076071741,
    "Title": "C# Code: ADSI Class for .NET 1.1 Active Directory Searching",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2006-03-07T20:34:22.373",
    "ModificationDate": "2006-03-07T20:34:22.373",
    "TemplateId": null,
    "SegmentId": 83,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "    /// <summary>\n    /// Static members for ADSI.\n    /// </summary>\n    public class Adsi\n    {\n        /// <summary>\n        /// Wrapper for the\n        /// <see cref=\"System.DirectoryServices.DirectoryEntry.Exists\"/>\n        /// method.\n        /// </summary>\n        /// <param name=\"Path\">\n        /// An LDAP-style query string.\n        /// </param>\n        /// <returns>\n        /// Returns <c>true</c> when a valid entry is found.\n        /// </returns>\n        public static bool EntryExists(string Path)\n        {\n            bool bln = false;\n\n            try\n            {\n                bln = DirectoryEntry.Exists(Path);\n            }\n            catch { return bln; }\n\n            return bln;\n        }\n\n        /// <summary>\n        /// Returns an\n        /// <see cref=\"System.Collections.ArrayList\"/>\n        /// of the Active Directory Security Groups\n        /// for the target\n        /// <see cref=\"System.DirectoryServices.DirectoryEntry\"/>.\n        /// </summary>\n        /// <param name=\"Path\">\n        /// An LDAP-style query string.\n        /// </param>\n        public static ArrayList EntryGroups(string Path)\n        {\n            ArrayList al = new ArrayList();\n\n            if (!EntryExists(Path)) return al;\n\n            using (DirectoryEntry user = new DirectoryEntry(Path))\n            {\n\n                object adsGroups = user.Invoke(\"Groups\");\n\n                foreach (object adsGroup in (IEnumerable)adsGroups)\n                {\n                    using (DirectoryEntry group = new DirectoryEntry(adsGroup))\n                    {\n                        al.Add(group.Name);\n                    }\n                }\n            }\n            return al;\n        }\n\n        /// <summary>\n        /// Returns a\n        /// <see cref=\"System.Collections.SortedList\"/>\n        /// of\n        /// <see cref=\"System.DirectoryServices.DirectoryEntry.Properties\"/>.\n        /// </summary>\n        /// <param name=\"Path\">\n        /// An LDAP-style query string.\n        /// </param>\n        public static SortedList EntryProperties(string Path)\n        {\n            SortedList entries = null;\n            DirectoryEntry entry = null;\n\n            if (EntryExists(Path))\n            {\n                entry = new DirectoryEntry(Path);\n                entries = new SortedList();\n\n                foreach (string name in entry.Properties.PropertyNames)\n                {\n                    if (entry.Properties[name].Value is Byte[])\n                    {\n                        entries.Add(name, \"[Complex Data Structure]\");\n                    }\n                    else\n                    {\n                        entries.Add(name, entry.Properties[name].Value.ToString());\n                    }\n                }\n            }\n\n            return entries;\n        }\n    }\n",
  "Tag": "kb2076071741"
}