{
  "Document": {
    "DocumentId": 2076071593,
    "Title": "Windows Forms Databinding: Andrew Brust on the Importance of the EndCurrentEdit() Method; DotNetRocks!; RowJiggle() Hack; VB.NET; C#",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2004-06-29T20:57:14.443",
    "ModificationDate": "2004-06-29T20:57:14.443",
    "TemplateId": null,
    "SegmentId": 83,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "The last 10 minutes of the Franklins.net DotNetRocks! show with Andrew Brust on March 31, 2003 deals with a data binding \"bug\" that's actually a feature. Here's the feature: when you open a Windows Form and enter data into a TextBox or ComboBox control bound to a DataSet and then close the form without moving to a new record or pressing some kind of Save button you will lose your changes.\n\nThis wonderful feature of the .NET Framework was stumbled upon by me while building my first WinForms project. In a fit of rage and panic, I wrote this code:\n\n    Public Sub RowJiggle(ByRef BindContext As BindingContext, _\n        ByRef TargetDataView As DataView)\n        'This subroutine makes sure that changes are recognized\n        'by moving off the row being edited and moving back. This hack sucks.\n        With BindContext(TargetDataView)\n            Try\n                If .Count > 1 Then\n                    If .Position <= (.Count - 1) And .Position > 0 Then\n                        'Backward jiggle:\n                        .Position -= 1\n                        .Position += 1\n                    ElseIf .Position < (.Count - 1) And .Position = 0 Then\n                        'Forward jiggle:\n                        .Position += 1\n                        .Position -= 1\n                    End If\n                End If\n            Catch Ex As Exception\n                Call Me.SetStatusBar(StatusIcons.ClientError, MainMsg:=Ex.Message)\n                Call MessageBox.Show(Ex.Message)\n            End Try\n        End With\n    End Sub\n\nUnfortunately, this code will not work for a DataSet with one row. Fortunately, that DotNetRocks! show aforementioned was archived and listened to again. This private rebroadcast of the show inspired me to write this code:\n\n    Private Sub RowEndEdit(ByRef BindContext As BindingContext, _\n        ByRef TargetDataView As DataView)\n\n        Dim BindBase As BindingManagerBase\n        Try\n            BindBase = BindContext.Item(TargetDataView)\n            Call BindBase.EndCurrentEdit()\n\n        Catch ex As Exception\n            Call Me.SetStatusBar(StatusIcons.ClientError, MainMsg:=ex.Message)\n            Call MessageBox.Show(ex.Message)\n        End Try\n    End Sub\n\nThis code rocks!",
  "Tag": "kb2076071593"
}