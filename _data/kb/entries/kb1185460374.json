{
  "Document": {
    "DocumentId": 1185460374,
    "Title": "JavaScript: The Significance of setTimeout() and clearTimeout()",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "1999-02-09T18:16:55",
    "ModificationDate": "1999-02-09T18:16:55",
    "TemplateId": null,
    "SegmentId": 67,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "Many designs using a for or while loop structure may instead have needed the setTimeout() method of the window object calling a function recursively. The general form of this structure is:\n\n    function MyFunc() {\n        //code here\n        timeoutID = setTimeout(\"MyFunc()\", 1000)\n    }\n\nwhere timeoutID is a script-global variable. After MyFunc() is called, this structure then recursively calls MyFunc() every second until clearTimeout(timeoutID) is used. Unlike a for or while loop, this \"loop\" is time based.",
  "Tag": "kb1185460374"
}