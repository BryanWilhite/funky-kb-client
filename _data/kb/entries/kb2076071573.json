{
  "Document": {
    "DocumentId": 2076071573,
    "Title": "C# Code: Windows Forms Data Services; Songhay.WinForms.Web.DataServices; Internal DataSet Procedures; C-sharp",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2004-06-29T21:00:57.013",
    "ModificationDate": "2004-06-29T21:00:57.013",
    "TemplateId": null,
    "SegmentId": 83,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "#region Internal DataSet Procedures\n\ninternal enum DataPosition\n{\n    First = 0,\n    Next = 1,\n    Previous = 2,\n    Last = 3\n}\n\ninternal static void DataSetCancel(DataSet TargetDataSet,ClientMessage Message)\n{\n    try\n    {\n        TargetDataSet.RejectChanges();\n        MessageBox.Show(String.Concat(\"All of your changes have been rejected. \",\n            \"Previous edits since last Save will not be saved to the server.\"),\n            Message.MainForm.Text,\n            MessageBoxButtons.OK,\n            MessageBoxIcon.Information);\n    }\n    catch(Exception Ex)\n    {\n        Message.DataErr();\n        MessageBox.Show(Ex.Message);\n    }\n}\n\ninternal static void DataSetPosition(DataSet TargetDataSet,\n    DataView EditView,DataPosition EnumPosition,ClientMessage Message)\n{\n    try\n    {\n        switch(EnumPosition)\n        {\n            case DataPosition.First:\n                Message.MainForm.BindingContext[EditView].Position = 0;\n                DataSetPosition(TargetDataSet,EditView,Message);\n                Message.ReadyToEdit();\n                break;\n\n            case DataPosition.Next:\n                Message.MainForm.BindingContext[EditView].Position += 1;\n                DataSetPosition(TargetDataSet,EditView,Message);\n                Message.ReadyToEdit();\n                break;\n            \n            case DataPosition.Previous:\n                Message.MainForm.BindingContext[EditView].Position -= 1;\n                DataSetPosition(TargetDataSet,EditView,Message);\n                Message.ReadyToEdit();\n                break;\n            \n            case DataPosition.Last:\n                Message.MainForm.BindingContext[EditView].Position \n                    = Message.MainForm.BindingContext[EditView].Count - 1;\n                DataSetPosition(TargetDataSet,EditView,Message);\n                Message.ReadyToEdit();\n                break;\n        }\n    }\n    catch(Exception Ex)\n    {\n        Message.ClientErr();\n        Message.MainStatusPanel.Text = Ex.Message;\n        MessageBox.Show(Ex.Message);\n    }\n}\n\ninternal static void DataSetPosition(DataSet TargetDataSet,\n    DataView EditView,ClientMessage Message)\n{\n    if(Message.MainForm.BindingContext[EditView].Count > 0)\n    {\n        Message.EditStatusPanel.Text = String.Format(\"Data Row {0}  of  {1}\",\n            (Message.MainForm.BindingContext[EditView].Position + 1).ToString(),\n            Message.MainForm.BindingContext[EditView].Count.ToString());\n\n        if(TargetDataSet.HasChanges())\n        {\n            DataSet ds = TargetDataSet.GetChanges();\n            string msg = \"\";\n            foreach(DataTable table in ds.Tables)\n            {\n                if(table.Rows.Count > 1)\n                    msg += String.Format(\"{0}: {1} changes. \",\n                        table.TableName,table.Rows.Count);\n\n                if(table.Rows.Count == 1)\n                    msg += String.Format(\"{0}: 1 change. \",\n                        table.TableName);\n            }\n            Message.ServerStatusPanel.Text = msg;\n        }\n        else\n        {\n            Message.ServerStatusPanel.Text\n                = \"No new changes to client-side data.\";\n        }\n    }\n    else\n    {\n        Message.EditStatusPanel.Text = \"        \";\n        Message.ServerStatusPanel.Text = \"        \";\n    }\n}\n\ninternal static void DataSetUpdate(SqlDataAdapter TargetSQLDataAdapter,\n    DataSet TargetDataSet,\n    DataTable TargetDataTable,\n    bool UpdateDBMS,\n    bool PromptToLoseChanges,\n    ClientMessage Message)\n{\n    //Stop any current edits.\n    Message.MainForm.BindingContext[TargetDataTable].EndCurrentEdit();\n\n    if(TargetDataSet.HasChanges())\n    {\n        if(PromptToLoseChanges)\n        {\n            if(MessageBox.Show(\"Do you want to save your changes?\",\n                Message.MainForm.Text, MessageBoxButtons.YesNo,\n                MessageBoxIcon.Question)\n                == DialogResult.No) return;\n        }\n    }\n\n    //Clone target data set. \n    DataSet dsTmp = null;\n    try\n    {\n        dsTmp = TargetDataSet.Clone();\n    }\n    catch(System.Exception Ex)\n    {\n        MessageBox.Show(Ex.Message);\n    }\n\n    //Merge with empty clone. FUNKYKB: Does this test schema integrity?\n    try\n    {\n        TargetDataSet.Merge(dsTmp);\n    }\n    catch(System.Exception Ex)\n    {\n        MessageBox.Show(Ex.Message);\n    }\n\n    //Update server.\n    if(UpdateDBMS)\n    {\n        try\n        {\n            Message.Saving();\n            TargetSQLDataAdapter.Update(TargetDataSet);\n        }\n        catch(System.Exception Ex)\n        {\n            Message.DataErr();\n            Message.MainStatusPanel.Text = Ex.Message;\n            MessageBox.Show(Ex.Message);\n        }\n    }\n\n    //Save and clear all changes.\n    TargetDataSet.AcceptChanges();\n}\n\n#endregion\n",
  "Tag": "kb2076071573"
}