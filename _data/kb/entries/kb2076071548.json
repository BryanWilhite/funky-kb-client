{
  "Document": {
    "DocumentId": 2076071548,
    "Title": "ADO.NET: Using Default Parameters in SQL Server Stored Procedures",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2003-11-24T16:52:36",
    "ModificationDate": "2003-11-24T16:52:36",
    "TemplateId": null,
    "SegmentId": 83,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "Default parameters are used in SQL Server stored proc's when its corresponding SQL Parameter object is omitted. This C# code snippet omits this object when the value to be assigned to this object is null:\n\n    if(CmdName != null)\n    {\n        SqlParam = new SqlParameter(\"@cmdName\",SqlDbType.VarChar,16);\n        SqlParam.Value = CmdName;\n        SqlCmd.Parameters.Add(SqlParam);\n    }\n\nThis and other methods are discussed in detail in \"HOW TO: Call Stored Procedures with Optional Values in ADO.NET\" (http://support.microsoft.com/default.aspx?scid=kb;EN-US;Q321902). Unfortunately, all code examples in the article are in VB.NET.\n\nAdditionally, it can't hurt to review \".NET Data Access Architecture Guide\" at:\n\n    http://msdn.microsoft.com/vcsharp/\n        using/understanding/security/\n            default.aspx?pull=/library/en-us/dnbda/html/daag.asp",
  "Tag": "kb2076071548"
}