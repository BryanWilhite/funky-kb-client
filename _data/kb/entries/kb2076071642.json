{
  "Document": {
    "DocumentId": 2076071642,
    "Title": "EncryptionServices; Class Module",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2005-02-03T21:09:12.063",
    "ModificationDate": "2005-02-03T21:09:12.063",
    "TemplateId": null,
    "SegmentId": 76,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "Option Compare Database\n\nOption Explicit\n\nPrivate x1a0(9) As Long\nPrivate cle(17) As Long\nPrivate x1a2 As Long\n\nPrivate inter As Long\nPrivate res As Long\n\nPrivate ax As Long\nPrivate bx As Long\nPrivate cx As Long\nPrivate dx As Long\nPrivate si As Long\n\nPrivate tmp As Long\nPrivate i As Long\nPrivate c As Byte\n\nPrivate lngCounter1 As Long\n\nPrivate pKey As String\nPrivate pClearText As String\nPrivate pEncText As String\n\nPublic Property Get ClearText() As String\n    ClearText = pClearText\nEnd Property\n\nPublic Property Let ClearText(ByVal str As String)\n    pClearText = str\nEnd Property\n\nPublic Property Get EncryptedText() As String\n    EncryptedText = pEncText\nEnd Property\n\nPublic Property Let EncryptedText(ByVal str As String)\n    pEncText = str\nEnd Property\n\nPublic Property Get Key() As String\n    Key = pKey\nEnd Property\n\nPublic Property Let Key(ByVal str As String)\n    pKey = VBA.Mid$(str, 1, 16)\nEnd Property\n\nPrivate Sub Class_Initialize()\n    pKey = vbNullString\n    pClearText = vbNullString\n    pEncText = vbNullString\nEnd Sub\n\nPrivate Sub Assemble()\n\n    x1a0(0) = ((cle(1) * 256) + cle(2)) Mod 65536\n    code\n    inter = res\n    \n    x1a0(1) = x1a0(0) Xor ((cle(3) * 256) + cle(4))\n    code\n    inter = inter Xor res\n    \n    x1a0(2) = x1a0(1) Xor ((cle(5) * 256) + cle(6))\n    code\n    inter = inter Xor res\n    \n    x1a0(3) = x1a0(2) Xor ((cle(7) * 256) + cle(8))\n    code\n    inter = inter Xor res\n    \n    x1a0(4) = x1a0(3) Xor ((cle(9) * 256) + cle(10))\n    code\n    inter = inter Xor res\n    \n    x1a0(5) = x1a0(4) Xor ((cle(11) * 256) + cle(12))\n    code\n    inter = inter Xor res\n    \n    x1a0(6) = x1a0(5) Xor ((cle(13) * 256) + cle(14))\n    code\n    inter = inter Xor res\n    \n    x1a0(7) = x1a0(6) Xor ((cle(15) * 256) + cle(16))\n    code\n    inter = inter Xor res\n    \n    i = 0\n\nEnd Sub\n\nPrivate Sub code()\n    \n    dx = (x1a2 + i) Mod 65536\n    ax = x1a0(i)\n    cx = &H15A\n    bx = &H4E35\n    \n    tmp = ax\n    ax = si\n    si = tmp\n    \n    tmp = ax\n    ax = dx\n    dx = tmp\n    \n    If (ax <> 0) Then\n    ax = (ax * bx) Mod 65536\n    End If\n    \n    tmp = ax\n    ax = cx\n    cx = tmp\n    \n    If (ax <> 0) Then\n    ax = (ax * si) Mod 65536\n    cx = (ax + cx) Mod 65536\n    End If\n    \n    tmp = ax\n    ax = si\n    si = tmp\n    ax = (ax * bx) Mod 65536\n    dx = (cx + dx) Mod 65536\n    \n    ax = ax + 1\n    \n    x1a2 = dx\n    x1a0(i) = ax\n    \n    res = ax Xor dx\n    i = i + 1\n\nEnd Sub\n\nPublic Sub Encrypt()\n    Dim champ1 As String, lngchamp1 As Long\n    Dim cfc, cfd, compte, c, d, e\n\n    pEncText = vbNullString\n\n    si = 0\n    x1a2 = 0\n    i = 0\n\n    For lngCounter1 = 1 To 16\n    cle(lngCounter1) = 0\n    Next lngCounter1\n\n    champ1 = pKey\n    lngchamp1 = Len(champ1)\n\n    For lngCounter1 = 1 To lngchamp1\n    cle(lngCounter1) = Asc(Mid(champ1, lngCounter1, 1))\n    Next lngCounter1\n\n    champ1 = pClearText\n    lngchamp1 = Len(champ1)\n    For lngCounter1 = 1 To lngchamp1\n    c = Asc(Mid(champ1, lngCounter1, 1))\n\n    Assemble\n\n    cfc = (((inter / 256) * 256) - (inter Mod 256)) / 256\n    cfd = inter Mod 256\n\n    For compte = 1 To 16\n\n    cle(compte) = cle(compte) Xor c\n\n    Next compte\n\n    c = c Xor (cfc Xor cfd)\n\n    d = (((c / 16) * 16) - (c Mod 16)) / 16\n    e = c Mod 16\n\n    pEncText = pEncText + Chr$(&H61 + d)\n    ' d+&h61 give one letter range from a to p for the 4 high bits of c\n    pEncText = pEncText + Chr$(&H61 + e)\n    ' e+&h61 give one letter range from a to p for the 4 low bits of c\n\n    Next lngCounter1\n\nEnd Sub\n\nPublic Sub Decrypt()\n    Dim champ1 As String, lngchamp1 As Long\n    Dim cfc, cfd, compte, c, d, e\n\n    pClearText = vbNullString\n\n    si = 0\n    x1a2 = 0\n    i = 0\n\n    For lngCounter1 = 1 To 16\n    cle(lngCounter1) = 0\n    Next lngCounter1\n\n    champ1 = pKey\n    lngchamp1 = Len(champ1)\n\n    For lngCounter1 = 1 To lngchamp1\n    cle(lngCounter1) = Asc(Mid(champ1, lngCounter1, 1))\n    Next lngCounter1\n\n    champ1 = pEncText\n    lngchamp1 = Len(champ1)\n\n    For lngCounter1 = 1 To lngchamp1\n\n    d = Asc(Mid(champ1, lngCounter1, 1))\n    If (d - &H61) >= 0 Then\n    d = d - &H61  ' to transform the letter to the 4 high bits of c\n    If (d >= 0) And (d <= 15) Then\n    d = d * 16\n    End If\n    End If\n    If (lngCounter1 <> lngchamp1) Then\n    lngCounter1 = lngCounter1 + 1\n    End If\n    e = Asc(Mid(champ1, lngCounter1, 1))\n    If (e - &H61) >= 0 Then\n    e = e - &H61 ' to transform the letter to the 4 low bits of c\n    If (e >= 0) And (e <= 15) Then\n    c = d + e\n    End If\n    End If\n\n    Assemble\n\n    cfc = (((inter / 256) * 256) - (inter Mod 256)) / 256\n    cfd = inter Mod 256\n\n    c = c Xor (cfc Xor cfd)\n\n    For compte = 1 To 16\n\n    cle(compte) = cle(compte) Xor c\n\n    Next compte\n\n    pClearText = pClearText + Chr$(c)\n\n    Next lngCounter1\nEnd Sub\n",
  "Tag": "kb2076071642"
}