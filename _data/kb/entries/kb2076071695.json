{
  "Document": {
    "DocumentId": 2076071695,
    "Title": "MCAD/MCSD Notes: Chapter 7, Lesson 4; Using Client-Side Scripts",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2005-07-29T13:39:03.603",
    "ModificationDate": "2005-07-29T13:39:03.603",
    "TemplateId": null,
    "SegmentId": 83,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "Lesson 4: Using Client-Side Scripts\n\nThis lesson reveals Microsoft's 'official' recommendations and design patterns for client-side scripts. Since Microsoft cannot as of this writing claim to have innovated in this area of technology, this lesson must be taken with suspicion for experienced programmers, the students of JavaScript and/or ECMA Script. What is important to observe in this lesson is how client-side script procedures are created Visual Studio .NET. Note that the visual design environment encourages hard-coding a procedure to a specific object, which is in contrast to more generic and reusable solutions.\n\n* \"Because not all browsers support scripts, you should check the browser capabilities before displaying pages that contain client-side scripts.\"\n\nSince before the year 2002, Eric Krok, Andy King and Michel Plungjan have been developing JavaScript Browser Sniffer, which may still be available at http://www.webreference.com/.\n\n* \"Both VBScript and JScript are functionally equivalent---they differ only in syntax and keywords... only Internet Explorer supports VBScript, so if your application needs to run on other browsers, you should use JScript.\"\n\nNote that Microsoft does not use the term \"JavaScript\" because they do not use JavaScript. Heidi Brumbaugh details the differences between JScript and JavaScript in \"Browser, Schmouser\" at:\n\n    http://www.webdeveloper.com/javascript/javascript_browser_checking.html ",
  "Tag": "kb2076071695"
}