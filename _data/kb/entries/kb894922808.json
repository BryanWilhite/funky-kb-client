{
  "Document": {
    "DocumentId": 894922808,
    "Title": "Book: Level 2: Programming Visual Basic 5.0; Chapter 15 Highlights (2/2): An Introduction to Objects",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "1998-10-01T13:39:46",
    "ModificationDate": "1998-10-01T13:39:46",
    "TemplateId": null,
    "SegmentId": 75,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "The Difference between Simple Variables and Object Variables\n\nSimple variables actually store the data they represent. Object variables always store a reference to the physical location of the data. This difference can be seen in the use of the Set keyword when assigning values to object variables:\n\n    Set m_frmComboBox = frmTest.cboStates\n\nWe cannot use this object variable without declaring it. The declaration is of the form:\n\n   Private m_frmComboBox As ComboBox\n\n\nVisual Basic Object Types\n\nObject hierarchy for forms:\nObject > Form > <user-defined class name of form>\n\nObject hierarchy for controls:\nObject > Control > TextBox | List Box | Combo Box\n\nBoth specific object types, Form and Control, descend from the generic Object. The use of Object causes VB to implement \"late binding\" during compilation. The use of specific object types promotes \"early binding\" (and faster code). For more details please see page 15-21.\n\n\nReferring to Objects on Forms\n\nHere are three ways to refer to the combo box, cboStates, on the form frmTest:\n\nfrmTest.cboStates 'dot syntax\nfrmTest!cboStates 'bang syntax\nfrmTest(\"cboStates\") 'collection object syntax\n\nThere is actually an advantage in using the bang syntax. For more details please see page 15-19.\n\n\nThe Concept of Collections\n\nCollections are similar to arrays. Collections are superior to arrays in many ways. Collections can have unique string names as well as the numerical index used in arrays.\n\n\nIterating through the Members of a Collection\n\nUse the For Each...Next structure. There is no need to determine the number of elements in the collection.",
  "Tag": "kb894922808"
}