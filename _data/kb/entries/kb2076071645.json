{
  "Document": {
    "DocumentId": 2076071645,
    "Title": "Web Service Exception: \"The type System.Collections.Hashtable is not supported because it implements IDictionary.\"; System.NotSupportedException",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2005-02-13T21:07:58.713",
    "ModificationDate": "2005-02-13T21:07:58.713",
    "TemplateId": null,
    "SegmentId": 83,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "Over two years ago, Dare Obasanjo explained to us why an ASMX exception can occur when a type implements IDictionary. In \"XML Serialization in the .NET Framework\" Dare writes, \"The XmlSerializer cannot process classes implementing the IDictionary interface. This was partly due to schedule constraints and partly due to the fact that a hashtable does not have a counterpart in the XSD type system. The only solution is to implement a custom hashtable that does not implement the IDictionary interface.\" The rest of this article, as of this writing, is here:\n\n    http://msdn.microsoft.com/library/en-us/dnexxml/html/xml01202003.asp\n\nUsing the [NonSerialized()] attribute to hide members that cannot be serialized does not appear to avoid this problem.",
  "Tag": "kb2076071645"
}