{
  "Document": {
    "DocumentId": 2076071959,
    "Title": "vi: Keyboard Shortcuts; keyxl.com",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2008-06-10T15:54:17",
    "ModificationDate": "2008-06-10T15:54:17",
    "TemplateId": null,
    "SegmentId": 73,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "From http://www.keyxl.com/aaab462/105/VIM-Text-Editor-keyboard-shortcuts.htm\n\nInsert:\n\ni\n    Inserts text to the left of the cursor.\n\nI\n    Inserts text at the beginning of the line, no matter where the cursor is positioned on the current line.\n\n\nAppend:\n\na\n    Begins inserting after the character (append) on which the cursor is positioned.\n\nA\n    Begins inserting at the end of the current line, no matter where the cursor is positioned on that line.\n\n\nOpen:\n\no\n    Begins inserting text on a new, empty line that is opened for you, below the current line. This is the only command that will allow you to insert text BELOW the LAST line of the file.\n\nO\n    Begins inserting text on a new, empty line that is opened for you, above the current line. This is the only command that will allow you to insert text ABOVE the FIRST line of the file.\n\n\nDeleting,copying and changing:\n\nd\n    Delete text. (see explanation above)\n\ny\n    Copy text (that is, yank it into a holding area for later use). (see explanation above)\n\nc\n    Change text from one thing to another, which you will type. (see explanation above)\n\n!\n    Filter text through a program.\n\n<\n    Shift a region of text to the left.\n\n>\n    Shift a region of text to the right.\n\n\nSingle Key Movements:\n\nh\n    Move cursor to the left one character. \n\nl\n    Move cursor to the right one character. \n\nj\n    Move cursor down one line. \n\nk\n    Move cursor up one line. \n\n^\n    Move cursor to the beginning of the line. \n\n$\n    Move cursor to the end of the current line. \n\n1G\n    Move cursor to the first line of your document. Other numbers will move to the line specified by number (ex. 50G goes to the 50th line). \n\nG\n    Move cursor to the last line of your file. \n\nCTRL U\n    Move cursor up in file 12 lines. Hold down the key marked CTRL (stands for control) and type U. CTRL is like another shift key. \n\nCTRL D\n    Move cursor down in file 15 lines. \n\nw\n    Move cursor forward to the next word, stopping at punctuation. \n\nW\n    Move cursor forward to the next word, ignoring punctuation. \n\ne\n    Move cursor forward to the end of the word, stopping at punctuation. \n\nE\n    Move cursor forward to the end of the word, ignores punctuation. \n\nb\n    Move cursor backwards to the previous word, stopping at punctuation. \n\nB\n    Move cursor backwards to the previous word, ignores punctuation. \n\nH\n    Move cursor to the top line of the screen, (as opposed to the top of the document which may not be the same place). \n\nM\n    Move cursor to the middle of the screen. \n\nL\n    Move cursor to the last line on the screen. \n\n%\n    Move cursor to the matching parenthesis, bracket or brace. Great for debugging programs. \n\n(\n    Move cursor to the beginning of the previous sentence (where a punctuation mark and two spaces define a sentence). \n\n)\n    Move cursor to the beginning of the next sentence. \n\n{\n    Move cursor to the beginning of the current paragraph. \n\n}\n    Move cursor to the beginning of the next paragraph. \n\n;\n    Repeat the last f or F command (see below). \n\n\nAlmost Single Key Movements:\n\n'\n    Move cursor to a previously marked location in the file. (ex. ma marks the location with the letter a, so a (apostrophe a) moves back to that location).\n\nf\n    Find the character corresponding to the next keystroke typed. Move the cursor to the next occurrence of that character (on the current line only).\n\nF\n    Same as f but movement is backwards.\n\n\nUseful:\n\nx\n    Delete character(s) to the right of the cursor, starting with the one beneath it. \n\nr\n    Replace the character under the cursor with the next character you type. This can be a very useful command. If you wanted to split up a line between two words, you might put the cursor on the blank space before the word you would like to go on the next line and type r . This would replace the space between the words with a carriage return and put the rest of the line onto a new line.\n\nj\n    Join lines; the opposite of the line splitting operation above. This will join the current line with the next line in your file. Also very useful.\n\nR\n    Replace lines; puts you in INSERT mode but types over the characters that are already on the current line.\n\np\n    Paste line(s) you deleted (or yanked) back into the file. This is an excellent command if you want to move a few lines somewhere else in your file. Just type 3dd to delete three lines, for example, and then move to where you want those lines to be and type p to paste the lines back into your file below the cursor.\n\n.\n    The period . command repeats the last text modification command, whatever it may have been (insert, deletion, etc).\n\n:r filename RETURN\n    Read a file into the current file being edited. The file be added gets placed below the current cursor position. Please note the colon : before the r in this command.\n\nCTRL L\n    Redraw the screen. If somebody writes to you while you are in the middle of vi and junk appears all over your screen, dont panic, it did not hurt your file, but you will have to hold down the CTRL key and type L to clean it up (CTRL L).\n\nd$\n    Delete (including the current character), to the end of the line.\n\nd^\n    Delete (excluding the current character), to the beginning of the line.\n\ndw\n    Delete a word(s), stops at punctuation.\n\ndW\n    Delete a word(s), ignoring punctuation.\n\nde\n    Delete a word(s), ignoring punctuation.\n\ndd\n    Delete a line(s).\n\ndG\n    Delete from the current line to the end of the document. CAREFUL: Slightly dangerous.\n\ndH\n    Delete from the current line to the line shown at the top of the screen.\n\n\nSearch and Replace:\n\n/the\n    Finds the next occurence of the. This will also find their, them, another, etc.\n\n?the\n    Finds the previous occurence of the.\n\nn\n    Repeats the last search command. Finds the Next occurence.\n\nd/the\n    Deletes until the next occurence of the. This is to demonstrate how the delete prefix can be used with any cursor movement command.\n\n:g/oldword/s//newword/gc\n    This will find all occurences of oldword and replace them with newword. The optional c at the end of the command tells vi that you would like to confirm each change. Vi will want you to type in y to make the change or n to skip that replacement. Great for spelling fixes.\n\n\nExit:\n\nESC :wq RETURN\n    Save and exit VI\n\nESC :q! RETURN\n    Exit WITHOUT saving changes\n",
  "Tag": "kb2076071959"
}