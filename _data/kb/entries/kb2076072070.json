{
  "Document": {
    "DocumentId": 2076072070,
    "Title": "Java Practices: “Use System.exit with care”; javapractices.com",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2008-12-02T12:34:39",
    "ModificationDate": "2008-12-02T12:34:39",
    "TemplateId": null,
    "SegmentId": 69,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "System.exit should be used with care. The normal method of terminating a program is to terminate all user threads.\n\nCases in which System.exit is appropriate :\n\n    * utility scripts\n    * GUI applications, in which the event dispatch user thread is created in the background. \n\nHere, the program may be terminated by calling System.exit, or, for example, by setting JFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE).\n\nFrom Sun’s Portability Cookbook :\n\n“The System.exit method forces termination of all threads in the Java virtual machine. This is drastic....System.exit should be reserved for a catastrophic error exit, or for cases when a program is intended for use as a utility in a command script that may depend on the program's exit code.” \n\n[http://www.javapractices.com/topic/TopicAction.do?Id=86]",
  "Tag": "kb2076072070"
}