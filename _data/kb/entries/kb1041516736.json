{
  "Document": {
    "DocumentId": 1041516736,
    "Title": "Book: Access 97 Power Programming; Chapter 3 Highlights (3/3): \"Working with Application Collections And Data Access Objects\"",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "1998-10-01T13:42:36",
    "ModificationDate": "1998-10-01T13:42:36",
    "TemplateId": null,
    "SegmentId": 64,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "DAO: Data Access Object\n\nA DAO is an automation interface for Accessing the Jet Database engine. In fact Access is an IDE/GUI for Jet. DAO is described by a containment hierarchy beginning with the DBEngine object. The DAO object hierarchy is shown on page 91.\n\n\nCurrentDb() Makes a Comeback\n\nCurrentDb() returns a second instance of the database found by DBEngine.Workspaces(0).Databases(0) or DBEngine(0)(0). Use of this previously \"obsolete\" function has been found useful in multi-user scenarios.\n\n\nListing All the Tables in a Database Omitting System and Hidden Tables\n\nThe code on page 94 (Listing 3.9) iterates through the TableDefs collection printing to the Debug window. Note the use of the bit-wise, Or comparision. This is used because the Attributes property can contain a number values stored in instrinsic contants (e.g. dbSystemObject).\n\n\nListing All the Select Queries in a Database\n\nListing 3.10 on page 94 features the use of the Type property of the QueryDef object. In this example, only queries of Type = dbQSelect are printed to the Debug window.",
  "Tag": "kb1041516736"
}