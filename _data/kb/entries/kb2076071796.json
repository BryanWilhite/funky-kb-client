{
  "Document": {
    "DocumentId": 2076071796,
    "Title": "JavaServer Faces in Action Notes: Chapter 1; Introducing JavaServer Faces; 1.5.2 Dissecting goodbye.jsp; 1.5.3 Examining the HelloBean class",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2007-03-08T15:30:12",
    "ModificationDate": "2007-03-08T15:30:12",
    "TemplateId": null,
    "SegmentId": 69,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "1.5.2 Dissecting goodbye.jsp\n\n\"One of the HtmlOutputText components references the same helloBean object as the previous page. This works fine because the object lives in the application's session and consequently lives between page requests.\"\n\n\n1.5.3 Examining the HelloBean class\n\n\"Unlike a lot of other frameworks, JSF backing beans don't have to inherit from a specific class. They simply need to expose their properties using ordinary JavaBean conventions and use specific signatures for their event-handling methods.\"\n\n\"Because goodbye doesn't perform any processing... we could have achieved the same effect by hardcoding the text \"success\" in the button's action property. This is because the navigation system will either use the literal value of an HtmlCommandButton's action property or the outcome of an action method...\"",
  "Tag": "kb2076071796"
}