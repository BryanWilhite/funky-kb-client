{
  "Document": {
    "DocumentId": -589421703,
    "Title": "OLE Automation: Using Fully Qualified References for Libraries Considered \"Default\"",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "1999-02-05T09:59:32",
    "ModificationDate": "1999-02-05T09:59:32",
    "TemplateId": null,
    "SegmentId": 76,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "I have decided to use fully qualified references to OLE Automation Libraries---even those considered \"default\" like the VB, VBA and Application objects. I do this because Microsoft says it does not hurt (it may improve performance slightly) and it allows me to take advantage of the \"Intelligent\" features of my IDEs. It is also an ongoing educational tool.\n\nSo in my Visual Basic 6.0 code, something like following will not be uncommon:\n\n    If VBA.VarType(StartCol) <> vbLong Then\n        VBA.Err.Raise 450\n    End If\n\nBy using fully qualified references, I can also see some of the \"mystery\" objects out there. For example, Debug is not a VBA object. And I thought for sure that the Open statement for file access was VBA method. But this does not seem to be the case.",
  "Tag": "kb-589421703"
}