{
  "Document": {
    "DocumentId": -1683864580,
    "Title": "VB: ADO; Using the Number Property of the ADO Error Object",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2000-02-09T22:52:09",
    "ModificationDate": "2000-02-09T22:52:09",
    "TemplateId": null,
    "SegmentId": 77,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "In the same manner we can intercept certain error numbers for VBA errors we can do the same for ADO \"data\" errors. The trick is finding a list of the numbers. MS KB article Q168354 (\"INFO: Underlying OLE and OLEDB Provider Errors Exposed via ADO\") provides one great place to look. The sample code below illustrates:\n\n    Private Sub EnvironmentErr(ByRef DataErr As ADODB.Error, _\n        Optional ByVal ObjName = vbNullString)\n    \n        Select Case DataErr.Number\n            Case -2147217900\n                p_strErrMsg = \"ADO Environment Error: \" _\n                    & \"An Object associated with \"\"\" _\n                    & ObjName & \"\"\" was not found.\"\n            \n            Case -2147467259\n                p_strErrMsg = \"ADO Environment Error: \" _\n                    & \"Connection to Data Source \"\"\" _\n                    & pADOcnn.Properties(\"Data Source\") _\n                    & \"\"\" failed.\" & vbCrLf _\n                    & \"The specified Catalog \"\"\" _\n                    & pADOcnn.Properties(\"Initial Catalog\") _\n                    & \"\"\" was not found.\"\n            \n            Case Else\n                p_strErrMsg = \"ADO Environment Error: \" _\n                    & DataErr.Number & \": \" & DataErr.Description\n        End Select\n        \n    End Sub",
  "Tag": "kb-1683864580"
}