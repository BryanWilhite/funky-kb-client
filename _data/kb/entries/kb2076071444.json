{
  "Document": {
    "DocumentId": 2076071444,
    "Title": "T-SQL Code: Example of Connecting to Index Server and Listing Files in Scope",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2007-11-19T15:16:26",
    "ModificationDate": "2007-11-19T15:16:26",
    "TemplateId": null,
    "SegmentId": 72,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "USE MyLocalServer\nGO\n\nIF OBJECT_ID('ListIDXFiles') IS NOT NULL \nBEGIN \n    DROP PROCEDURE ListIDXFiles\n    IF OBJECT_ID('ListIDXFiles') IS NOT NULL\n        PRINT '<<< FAILED DROPPING PROCEDURE ListIDXFiles >>>'\n    ELSE \n        PRINT '<<< DROPPED PROCEDURE ListIDXFiles >>>'\nEND\nGO\n\nCREATE PROCEDURE ListIDXFiles\n    (\n        @cmdID        int           = 0\n    ,   @columns      nvarchar(500) = NULL\n    ,   @scope        nvarchar(255) = NULL\n    ,   @contains     nvarchar(500) = NULL\n    ,   @order        nvarchar(255) = NULL\n    ,   @fileNameLike nvarchar(255) = NULL\n    )\n\nAS\n\n-- Description: List Files in Index Server Scope.\n-- Developer: Bryan Wilhite\n\nSET NOCOUNT ON\n\nIF NOT EXISTS(SELECT * FROM master.dbo.sysservers WHERE srvname = 'IDXSERVER')\nBEGIN\n    EXECUTE sp_addlinkedserver\n        @server     = IDXSERVER\n    ,   @srvproduct = 'Index Server'\n    ,   @provider   = 'MSIDXS'\n    ,   @datasrc    = 'Web'\n    --'Web' is the name of Index Server's default text search catalog.\nEND\n\nDECLARE\n    @tSQL nvarchar(4000)\n,   @test nvarchar(500)\n,   @sq   char(1)\n\nIF @cmdID = 0\nBEGIN\n    IF @columns IS NULL\n        SET @columns = 'DocTitle,Directory,Vpath,Path,ShortFileName,Filename,Size,Access,Create,Write,Characterization,Rank'\n\n    IF @scope IS NULL\n        SET @scope = '\"/\"'\n\n    IF @order IS NULL\n        SET @order = 'Rank DESC'\n\n    IF @fileNameLike IS NULL\n        SET @fileNameLike = '%.pdf'\n\n    SET @sq = CHAR(39)\n\n    IF @contains IS NOT NULL\n    BEGIN\n        -- Test only to prevent syntax errors.\n        SET @test = @contains\n        SET @test = REPLACE(@test,CHAR(34),'')\n        SET @test = REPLACE(@test,CHAR(39),'')\n        SET @test = REPLACE(@test,SPACE(1),'')\n        IF LEN(@test) = 0\n            RETURN\n\n        -- The use of NEAR() on the client causes \"Expecting Phrase\" error in .HTW files.\n        IF CHARINDEX(CHAR(34),@contains) = 0 AND CHARINDEX('NEAR',@contains) > 0 AND CHARINDEX('NEAR()',@contains) = 0\n            SET @contains = REPLACE(@contains,'NEAR','NEAR()')\n\n        SET @contains = REPLICATE(@sq,2) + @contains + REPLICATE(@sq,2)\n\n        SET @tSQL = 'SELECT * FROM OPENQUERY(IDXSERVER,'\n            + @sq + 'SELECT' + SPACE(1) + @columns\n            + SPACE(1) + 'FROM SCOPE('+ REPLICATE(@sq,2) + @scope + REPLICATE(@sq,2) + ')'\n            + SPACE(1) + 'WHERE CONTAINS(' + @contains + ') > 0'\n            + SPACE(1) + 'AND Filename LIKE' + SPACE(1) + REPLICATE(@sq,2) + @fileNameLike + REPLICATE(@sq,2)\n            + SPACE(1) + 'ORDER BY' + SPACE(1) + @order + @sq + ')'\n    END\n    ELSE\n    BEGIN\n        SET @tSQL = 'SELECT * FROM OPENQUERY(IDXSERVER,'\n            + @sq + 'SELECT' + SPACE(1) + @columns\n            + SPACE(1) + 'FROM SCOPE('+ REPLICATE(@sq,2) + @scope + REPLICATE(@sq,2) + ')'\n            + SPACE(1) + 'WHERE Filename LIKE' + SPACE(1) + REPLICATE(@sq,2) + @fileNameLike + REPLICATE(@sq,2)\n            + SPACE(1) + 'ORDER BY' + SPACE(1) + @order + @sq + ')'\n    END\n\n    --For debugging purposes:\n    --PRINT @tSQL\n    --RETURN\n\n    EXECUTE sp_executesql @stmt = @tSQL\nEND\nRETURN\nGO\n\nGRANT EXECUTE ON ListIDXFiles TO [Web Solutions Users]\nGO\n\nIF OBJECT_ID('ListIDXFiles') IS NOT NULL \n    PRINT '<<< CREATED PROCEDURE ListIDXFiles >>>' \nELSE \n    PRINT '<<< FAILED CREATING PROCEDURE ListIDXFiles >>>' \nGO",
  "Tag": "kb2076071444"
}