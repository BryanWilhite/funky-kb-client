{
  "Document": {
    "DocumentId": 2076072291,
    "Title": "“How does the ASP.NET Cache work?”; stackoverflow.com",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2009-10-04T14:34:18",
    "ModificationDate": "2009-10-04T14:34:18",
    "TemplateId": null,
    "SegmentId": 83,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "As applications grow it is quite normal to leverage caching as a way to gain scalability and keep consistent server response times. Caching works by storing data in memory to drastically decrease access times. To get started I would look at ASP.NET caching.\n\nThere are 3 types of general Caching techniques in ASP.NET web apps:\n\n    * Page Output Caching(Page Level)\n    * Page Partial-Page Output(Specific Elements of the page)\n    * Programmatic or Data Caching\n\nOutput Caching\n\nPage level output caching caches the html of a page so that each time ASP.NET page requested it checks the output cache first. You can vary these requests by input parameters(VaryByParam) so the the page will only be cached for users where ID=1 if a requests come in where ID=2 asp.net cache is smart enough to know it needs to re-render the page.\n\nPartial-Page Caching\n\na lot of times it wont make sense to cache the entire page in these circumstances you can use partial Page caching. This is usually used with user controls and is set the same way as page level only adding the OutputCache declarative inside the usercontrol.\n\nData Caching\n\nYou can store objects or values that are commonly used throughout the application. It can be as easy to as:\n\nCache[\"myobject\"] = person;\n\nEnterprise Level Caching\n\nIt is worth mention that there are many Enterprise level caching architectures that have come about to leverage the effectiveness caching. Memcache for .net and Velocity are a couple.\n\nIn General\n\nYou can't really make blanket statements on what you should and shouldn't cache because every application is different. However, you can make a few generalizations that hold true MOST of time. Static elements like images and content are OK to cache. Even a dynamic page that is getting hammered is worth caching for 5-10 seconds, it will make a world of difference to your web server.\n\n[http://stackoverflow.com/questions/\n    627865/how-does-the-asp-net-cache-work]\n\n[http://msdn.microsoft.com/en-us/kb/kb00323290.aspx]\n",
  "Tag": "kb2076072291"
}