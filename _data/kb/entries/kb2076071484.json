{
  "Document": {
    "DocumentId": 2076071484,
    "Title": "T-SQL: Flippant Remarks about Table Aliases and the Self Join",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2002-05-31T10:54:39.593",
    "ModificationDate": "2002-05-31T10:54:39.593",
    "TemplateId": null,
    "SegmentId": 72,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "Up until shortly before the writing if this article, I considered the use of table aliases just a matter of style. Since I enjoy writing (for humans) I preferred using table names instead of something like:\n\n    USE pubs\n    SELECT\n        p.pub_id\n    ,   p.pub_name\n    FROM\n        publishers AS p\n\nI have no trouble writing out \"publishers.\" However, I find myself forced to use table aliases when I need to project two or more sets of data in the same table. This is related to the so-called \"self-join\" which can be used to, for example, find out the authors in Oakland, California who live in the same ZIP Code:\n\nUSE pubs\nSELECT DISTINCT\n    au1.au_fname\n,   au1.au_lname\nFROM\n    authors au1\n,   authors au2\nWHERE\n    au1.zip = au2.zip\nAND\n    au1.city = 'Oakland'\nAND\n    au1.au_id <> au2.au_id\n\nNote the AS clause is omitted from the FROM clause (just a matter of style).\n",
  "Tag": "kb2076071484"
}