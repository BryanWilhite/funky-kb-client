{
  "Document": {
    "DocumentId": 2076072184,
    "Title": "C#: Controlling the default value of an enum; MSDN",
    "DocumentShortName": null,
    "FileName": null,
    "Path": null,
    "CreateDate": "2009-08-14T19:45:34",
    "ModificationDate": "2009-08-14T19:45:34",
    "TemplateId": null,
    "SegmentId": 83,
    "IsRoot": false,
    "IsActive": true,
    "SortOrdinal": null,
    "ClientId": null,
    "Tag": null
  },
  "Content": "The default underlying type of the enumeration elements is int. By default, the first enumerator has the value 0, and the value of each successive enumerator is increased by 1.\n\n…\n\nEnumerators can have initializers to override the default values. For example:\n\n    enum Days {Sat=1, Sun, Mon, Tue, Wed, Thu, Fri};\n\nIn this enumeration, the sequence of elements is forced to start from 1 instead of 0.\n\nThe default value of an enum E is the value produced by the expression (E)0.\n\n…\n\nIn this example, the base-type option is used to declare an enum whose members are of the type long. Notice that even though the underlying type of the enumeration is long, the enumeration members must still be explicitly converted to type long using a cast.\n\n// keyword_enum2.cs\n// Using long enumerators\nusing System;\npublic class EnumTest \n{\n    enum Range :long {Max = 2147483648L, Min = 255L};\n    public static void Main() \n    {\n       long x = (long) Range.Max;\n       long y = (long) Range.Min;\n       Console.WriteLine(\"Max = {0}\", x);\n       Console.WriteLine(\"Min = {0}\", y);\n    } \n}\n\n[http://msdn.microsoft.com/en-us/library/sbbt4032(VS.71).aspx]",
  "Tag": "kb2076072184"
}